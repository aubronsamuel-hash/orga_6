[CmdletBinding()]
param(
  [string]$OutFile = 'docs/REPO_TREE.md'
)
$ErrorActionPreference = 'Stop'
Write-Host 'repo_tree generated'

$root = (Get-Location).Path
$exclude = '(\.git($|[\\/]))|(node_modules($|[\\/]))|(\\\.venv($|[\\/]))|(__pycache__($|[\\/]))'

$dirItems = Get-ChildItem -Recurse -Force -Directory | Where-Object { $_.FullName -notmatch $exclude }
$dirItems += Get-ChildItem -Force -Directory | Where-Object { $_.FullName -notmatch $exclude }
$dirRel = $dirItems | ForEach-Object { $_.FullName.Substring($root.Length + 1).Replace('\\','/') } | Sort-Object -Unique

$fileRel = Get-ChildItem -Recurse -Force -File | Where-Object { $_.FullName -notmatch $exclude } |
  ForEach-Object { $_.FullName.Substring($root.Length + 1).Replace('\\','/') } | Sort-Object -Unique

$header = @('# Repository Tree (autogenerated)', '', '> This file is generated to help Codex/guards validate repo structure.', '', '```')
$footer = @('```')
$lines  = @()
$lines += $dirRel
$lines += $fileRel

$docsDir = Join-Path $root 'docs'
if (-not (Test-Path $docsDir)) { New-Item -ItemType Directory -Path $docsDir | Out-Null }

($header + $lines + $footer) | Set-Content -Encoding UTF8 -Path $OutFile
